#!/usr/bin/env bash

### Helpers begin
check_deps() {
    local missing
    for d in "${deps[@]}"; do
        if [[ -z $(command -v "$d") ]]; then
            # Force absolute path
            if [[ ! -e "/$d" ]]; then
                err "$d was not found"
                missing="true"
            fi
        fi
    done; unset d
    [[ -z $missing ]] || exit 128
}
err() { echo -e "${color:+\e[31m}[!] $*${color:+\e[0m}" >&2; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*${color:+\e[0m}"; }
info() { echo -e "${color:+\e[37m}[*] $*${color:+\e[0m}"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || return 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || return 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $*${color:+\e[0m}"; }
warn() { echo -e "${color:+\e[33m}[-] $*${color:+\e[0m}"; }
### Helpers end

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS] <server>

DESCRIPTION
    Create runtime configs and start Weechat.

OPTIONS
    -a, --no-connect    Disable auto-connect
    -h, --help          Display this help message
        --no-color      Disable colorized output

EOF
    exit "$1"
}

declare -a args
unset help noconnect
color="true"
configs="INSTALL_DIR/configs"
runtime="$configs/runtime"
template="$configs/template"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift; args+=("$@"); break ;;
        "-a"|"--no-connect") noconnect="--no-connect" ;;
        "-h"|"--help") help="true" ;;
        "--no-color") unset color ;;
        *) args+=("$1") ;;
    esac
    case "$?" in
        0) ;;
        1) shift ;;
        *) usage $? ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Help info
[[ -z $help ]] || usage 0

# Check for missing dependencies
declare -a deps
deps+=("weechat")
check_deps

# Check for valid params
[[ $# -eq 1 ]] || usage 1

# These are needed at a minimum
[[ -f $configs/$1/irc.conf ]] || errx 2 "No $1/irc.conf exists"
[[ -f $configs/$1/sec.conf ]] || errx 3 "No $1/sec.conf exists"

# Ensure runtime directory exists
mkdir -p $runtime

# Cleanup if files leftover
rm -rf $runtime/$1

# Setup configs
cp -r $template $runtime/$1
while read -r conf; do
    case "$conf" in
        *"irc.conf") cat $conf >>$runtime/$1/irc.conf ;;
        *"sec.conf") ln -s $conf $runtime/$1/sec.conf ;;
        *) cp -f $conf $runtime/$1/ ;;
    esac
done < <(find $configs/$1/ -maxdepth 1 -type f)

# Run weechat
if [[ -n $TMUX ]]; then
    TERM="tmux-256color" weechat $noconnect --dir $runtime/$1
else
    weechat $noconnect --dir $runtime/$1
fi

# Cleanup
rm -rf $runtime/$1
